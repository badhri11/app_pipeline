name: CI/CD Pipeline

on:
  push:
    branches: [ main, dev, feature/**, fix/** ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Extract Blueprint Variables
        run: |
          source ./extract.sh
          echo "DOCKER_IMAGE=$DOCKER_IMAGE" >> $GITHUB_ENV
          echo "DOCKER_USER=$DOCKER_USER" >> $GITHUB_ENV
          echo "EC2_IP=$EC2_IP" >> $GITHUB_ENV
          echo "EMAIL=$EMAIL" >> $GITHUB_ENV
          env | grep DOCKER
          env | grep EC2
          env | grep EMAIL
        shell: bash

      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest

      - name: Run Unit Tests
        run: pytest tests/

      - name: Set Image Tag
        run: |
          SHORT_SHA=${GITHUB_SHA::7}
          BRANCH_NAME=$(echo "${GITHUB_REF##*/}" | tr '[:upper:]' '[:lower:]' | tr '/' '-')
          echo $BRANCH_NAME
          IMAGE_TAG="${BRANCH_NAME}-${SHORT_SHA}"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Build Docker Image
        run: docker build -t $DOCKER_USER/$DOCKER_IMAGE:$IMAGE_TAG .

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u $DOCKER_USER --password-stdin

      - name: Push Tagged Docker Image
        run: docker push $DOCKER_USER/$DOCKER_IMAGE:$IMAGE_TAG

      - name: Push as latest (optional)
        run: |
          docker tag $DOCKER_USER/$DOCKER_IMAGE:$IMAGE_TAG $DOCKER_USER/$DOCKER_IMAGE:latest
          docker push $DOCKER_USER/$DOCKER_IMAGE:latest

      - name: Trivy Vulnerability Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.DOCKER_USER }}/${{ env.DOCKER_IMAGE }}:${{ env.IMAGE_TAG }}
          format: table
          exit-code: 1
          severity: CRITICAL,HIGH
          ignore-unfixed: true

      - name: Deploy to EC2
        run: |
          scp -o StrictHostKeyChecking=no docker-compose.yml ubuntu@$EC2_IP:/home/ubuntu/
          ssh -o StrictHostKeyChecking=no ubuntu@$EC2_IP "
            docker pull $DOCKER_USER/$DOCKER_IMAGE:$IMAGE_TAG &&
            sed -i 's/${IMAGE_TAG}/$IMAGE_TAG/g' docker-compose.yml &&
            docker-compose up -d
          "

      - name: Send Email Notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "ðŸš€ Deployment Success - ${{ env.IMAGE_TAG }}"
          body: |
            CI/CD pipeline completed successfully.
            Image: ${{ env.DOCKER_USER }}/${{ env.DOCKER_IMAGE }}:${{ env.IMAGE_TAG }}
            Deployed to EC2: ${{ env.EC2_IP }}
          to: ${{ env.EMAIL }}
          from: GitHub CI/CD
